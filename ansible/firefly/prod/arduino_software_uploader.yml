---
- name: Upload Arduino Software on Remote Device
  hosts: firefly
  remote_user: svrn
  vars_files:
    - vault.yml
  gather_facts: no
  vars:
    DIRECTORY: "yacs_helmet_RGB_leds"
  vars_prompt:
    - name: "version"
      prompt: "Enter version (leave empty for 'latest'):"
      private: no
      default: "latest"

  tasks:
    - name: Create folder
      ansible.builtin.command:
        cmd: "mkdir -p {{ DIRECTORY }}/{{ version }}"
      args:
        creates: "{{ DIRECTORY }}/{{ version }}"

    - name: Download files directly on the target device
      ansible.builtin.get_url:
        url: "ftp://{{ vault.FTP_USER_PROD }}:{{ vault.FTP_PASS_PROD }}@{{ vault.FTP_HOST_PROD }}/{{ DIRECTORY }}/{{ version }}/{{ item.file }}"
        dest: "{{ DIRECTORY }}/{{ version }}/{{ item.file }}"
        mode: "{{ item.mode | default(omit) }}"
      loop:
        - file: setup.sh
          mode: "0755"
        - file: yacs-helmet-RGB-leds.tar.gz
      loop_control:
        loop_var: item

    - name: Stop yacs-orchestrator.service
      become: true
      command: systemctl stop yacs-orchestrator.service

    - name: Install avrdude package
      ansible.builtin.apt:
        name: avrdude
        state: present
      become: true

    - name: Execute script with .bashrc sourced
      ansible.builtin.shell:
        cmd: "bash -ic 'source ~/.bashrc && echo ROS2_WS: ${ROS2_WS} && ./setup.sh'"
        chdir: "{{ DIRECTORY }}/{{ version }}"
      args:
        executable: /bin/bash
      become: true
      become_user: svrn

    - name: Restart yacs-orchestrator.service
      become: true
      command: systemctl restart yacs-orchestrator.service
