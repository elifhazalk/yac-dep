---
- name: Update slam maps
  hosts: firefly
  remote_user: svrn
  vars_files:
    - vault.yml
  gather_facts: no
  vars:
    DIRECTORY: "yacs_slam_maps"
  vars_prompt:
    - name: "version"
      prompt: "Enter version (leave empty for 'latest'):"
      private: no
      default: "latest"

  tasks:
    - name: Create folder
      ansible.builtin.command:
        cmd: "mkdir -p {{ DIRECTORY }}/{{ version }}"
      args:
        creates: "{{ DIRECTORY }}/{{ version }}"

    - name: Download files directly on the target device
      ansible.builtin.get_url:
        url: "ftp://{{ vault.FTP_USER_PROD }}:{{ vault.FTP_PASS_PROD }}@{{ vault.FTP_HOST_PROD }}/{{ DIRECTORY }}/{{ version }}/{{ item.file }}"
        dest: "{{ DIRECTORY }}/{{ version }}/{{ item.file }}"
        mode: "{{ item.mode | default(omit) }}"
      loop:
        - file: setup.sh
          mode: "0755"
        - file: current_map.yaml
      loop_control:
        loop_var: item

    - name: Read the contents of current_map.yaml
      slurp:
        src: "{{ DIRECTORY }}/{{ version }}/current_map.yaml"
      register: current_map_content

    - debug:
        msg: "{{ current_map_content['content']|b64decode|from_yaml }}"

    - name: Parse current_map.yaml contents
      set_fact:
        parsed_yaml: "{{ current_map_content['content'] | b64decode | from_yaml }}"

    - debug:
        msg: "{{ parsed_yaml }}"

    - name: Set parsed variables as facts
      set_fact:
        active_folder_name: "{{ parsed_yaml['active']['folder_name'] }}"
        active_map_name: "{{ parsed_yaml['active']['map_name'] }}"
        active_md5sum: "{{ parsed_yaml['active']['md5sum'] }}"

    - name: Pull {{ active_folder_name }}.tar.gz from FTP
      get_url:
        url: "ftp://{{ vault.FTP_USER_PROD }}:{{ vault.FTP_PASS_PROD }}@{{ vault.FTP_HOST_PROD }}/{{ DIRECTORY }}/{{ version }}/{{ active_folder_name }}.tar.gz"
        dest: "{{ DIRECTORY }}/{{ version }}/{{ active_folder_name }}.tar.gz"

    - name: Execute script with .bashrc sourced
      ansible.builtin.shell:
        cmd: "bash -ic 'source ~/.bashrc && echo ROS2_WS: ${ROS2_WS} && ./setup.sh'"
        chdir: "{{ DIRECTORY }}/{{ version }}"
      args:
        executable: /bin/bash
      become: true
      become_user: svrn
