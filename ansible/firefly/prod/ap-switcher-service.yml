- name: yacs-ap-switcher service for Firefly Devices
  hosts: firefly
  remote_user: svrn
  vars_files:
    - vault.yml
  gather_facts: no
  vars:
    DIRECTORY: "yacs_ap_switcher_firefly"
  vars_prompt:
    - name: "version"
      prompt: "Enter version (leave empty for 'latest'):"
      private: no
      default: "latest"

  tasks:
    - name: Create folder
      ansible.builtin.command:
        cmd: "mkdir -p {{ DIRECTORY }}/{{ version }}/srv"
      args:
        creates: "{{ DIRECTORY }}/{{ version }}/srv"

    - name: Get file list from FTP server
      shell: |
        curl --user "{{ vault.FTP_USER_PROD }}:{{ vault.FTP_PASS_PROD }}" \
        --list-only "ftp://{{ vault.FTP_HOST_PROD }}/{{ DIRECTORY }}/{{ version }}/srv/"; exit 0
      register: ftp_response

    - name: Extract file list from FTP response
      set_fact:
        ftp_files: "{{ ftp_response.stdout_lines[0:] | map('regex_replace', '^.*\\s(\\S+)$', '\\1') | list }}"

    - name: debug
      ansible.builtin.debug:
        msg: " ftp_files -> '{{ ftp_files }}'"

    - name: Download folder contents from FTP server
      ansible.builtin.get_url:
        url: "ftp://{{ vault.FTP_USER_PROD }}:{{ vault.FTP_PASS_PROD }}@{{ vault.FTP_HOST_PROD }}/{{ DIRECTORY }}/{{ version }}/srv/{{ item }}"
        dest: "{{ DIRECTORY }}/{{ version }}/srv"
        mode: "{{ '0755' if item.endswith('.sh') else '0644' }}"
      with_items: "{{ ftp_files }}"

    - name: Download files directly on the target device
      ansible.builtin.get_url:
        url: "ftp://{{ vault.FTP_USER_PROD }}:{{ vault.FTP_PASS_PROD }}@{{ vault.FTP_HOST_PROD }}/{{ DIRECTORY }}/{{ version }}/{{ item.file }}"
        dest: "{{ DIRECTORY }}/{{ version }}/{{ item.file }}"
        mode: "{{ item.mode | default(omit) }}"
      loop:
        - file: setup.sh
          mode: "0755"
      loop_control:
        loop_var: item

    - name: Execute script with .bashrc sourced
      ansible.builtin.shell:
        cmd: "bash -ic 'source ~/.bashrc && echo ROS2_WS: ${ROS2_WS} && ./setup.sh'"
        chdir: "{{ DIRECTORY }}/{{ version }}"
      args:
        executable: /bin/bash
      become: true
      become_user: root

    - name: Reload systemd daemon
      become: true
      command: systemctl daemon-reload

    - name: Enable yacs-ap-switcher.service
      become: true
      command: systemctl enable yacs-ap-switcher.service

    - name: Restart yacs-ap-switcher.service
      become: true
      command: systemctl restart yacs-ap-switcher.service
