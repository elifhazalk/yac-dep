---
- name: Promtail Setup (as Docker Container)
  hosts: vmyacsros_prod
  remote_user: svrn
  vars_files:
    - vault.yml
  gather_facts: no
  vars:
    DIRECTORY: "yacs_promtail_setup_server"
  vars_prompt:
    - name: "version"
      prompt: "Enter version (leave empty for 'latest'):"
      private: no
      default: "latest"

  tasks:
    - name: Create folder
      ansible.builtin.command:
        cmd: "mkdir -p {{ DIRECTORY }}/{{ version }}"
      args:
        creates: "{{ DIRECTORY }}/{{ version }}"

    - name: Download files directly on the target device
      ansible.builtin.get_url:
        url: "ftp://{{ vault.FTP_USER_PROD }}:{{ vault.FTP_PASS_PROD }}@{{ vault.FTP_HOST_PROD }}/{{ DIRECTORY }}/{{ version }}/{{ item.file }}"
        dest: "{{ DIRECTORY }}/{{ version }}/{{ item.file }}"
        mode: "{{ item.mode | default(omit) }}"
      loop:
        - file: setup.sh
          mode: "0755"
        - file: promtail-config.j2
        - file: promtail-compose.yaml
        - file: promtail-config.yaml
      loop_control:
        loop_var: item

    - name: Fetch the template back to the Ansible Controller
      ansible.builtin.fetch:
        src: "{{ DIRECTORY }}/{{ version }}/promtail-config.j2"
        dest: "promtail-config.j2"
        flat: yes

    - name: Apply the fetched promtail template to create configuration on target
      ansible.builtin.template:
        src: "promtail-config.j2"
        dest: "{{ DIRECTORY }}/{{ version }}/promtail-config.yaml"

    - name: Execute script with .bashrc sourced
      ansible.builtin.shell:
        cmd: "bash -ic 'source ~/.bashrc && echo ROS2_WS: ${ROS2_WS} && ./setup.sh'"
        chdir: "{{ DIRECTORY }}/{{ version }}"
      args:
        executable: /bin/bash
      become: true
      become_user: svrn

    - name: Check if fetched file exists on Ansible Controller using shell
      ansible.builtin.shell:
        cmd: "[ -e 'promtail-config.j2' ]"
      delegate_to: localhost
      register: file_check_result
      changed_when: false
      failed_when: false

    - name: Debug file_check_result
      ansible.builtin.debug:
        var: file_check_result

    - name: Delete file if it exists
      ansible.builtin.shell:
        cmd: "rm -f 'promtail-config.j2'"
      delegate_to: localhost
      when: file_check_result.rc == 0
